---
import type { GetStaticPaths } from "astro";
import StoryblokComponent from "@storyblok/astro/StoryblokComponent.astro";
import {   useStoryblokApi} from '@storyblok/astro'
import BaseLayout from "../layouts/BaseLayout.astro";
import { type ISbStoryData } from "@storyblok/astro";
import {  allLanguages } from "../utils/lang";
interface Props {
  story: ISbStoryData;
}

export const prerender = true

export async function getStaticPaths() {
  const sbApi = useStoryblokApi();


  const { data } = await sbApi.get("cdn/links", {
    version: "published",
  })

  const allSlugs = Object.values(data.links).map((link) => {
    return link.slug;
  });

  const slugMap = allLanguages.map(lang => lang.code).flatMap((lang) => {
    return allSlugs.map((slug) => {
      return {
        slug, lang
      };
    });
  });

  const staticStories = await Promise.all(slugMap.map(async ({slug, lang}) => {
     const { data } = await sbApi.get(
        `cdn/stories/${slug === undefined ? 'home' : slug}`,
        {
          version: "published",
          language: lang,
        }
      );
    return {
      params: {
        slug: data.story.full_slug,
        lang
      },
      props: { story: data.story }
    };
  }));

  return staticStories
}
---

<BaseLayout>
  <StoryblokComponent blok={Astro.props.story.content} />
</BaseLayout>
